# frozen_string_literal: true
#
# ronin-asm - A Ruby DSL for crafting Assembly programs and shellcode.
#
# Copyright (c) 2007-<%= Date.today.year %> Hal Brodigan (postmodern.mod3 at gmail.com)
#
# ronin-asm is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ronin-asm is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with ronin-asm.  If not, see <https://www.gnu.org/licenses/>.
#

#
# NOTE: this file was automatically generated. Do not edit!
#

module Ronin
  module ASM
    module X86
      #
      # Contains all x86 instruction classes and methods.
      #
      module Instructions
      <%- @instructions.each do |instruction| -%>
        autoload :<%= instruction.name.upcase %>, 'ronin/asm/x86/instructions/<%= instruction.name %>'
      <%- end -%>

      <%- @instructions.each do |instruction| -%>
        # <%= instruction.summary %>
        # @return [Ronin::ASM::X86::Instructions::<%= instruction.name.upcase %>]
        <%- unless instruction.no_operands? -%>
        # @example
        <%- instruction_examples(instruction).each do |example| -%>
        #   <%= example %>
        <%- end -%>
        <%- end -%>
        def <%= instruction.name %>(<%= instruction_method_args(instruction) %>) = add_instruction(Instructions::<%= instruction.name.upcase %>,<%= instruction_method_args(instruction) %>)
      <%- end -%>
      end
    end
  end
end
